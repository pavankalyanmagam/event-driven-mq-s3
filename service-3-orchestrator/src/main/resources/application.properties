server.port=8082
# Force the use of an embedded, in-memory ActiveMQ broker

# This is CRITICAL for preventing "Forbidden class" errors when listening
#spring.activemq.packages.trust-all=true

# RabbitMQ
# Define queue names for RabbitMQ
rabbitmq.queue.submission=job-submission-requests
rabbitmq.queue.persistence=job-persistence-notifications

# RabbitMQ Connection URI from CloudAMQP
#spring.rabbitmq.uri=amqps://ullacnxc:HZVKVsJE7Cz1kROfw24R2jc5qvkwfM1g@chimpanzee.rmq.cloudamqp.com/ullacnxc
## Queue name it listens to
#job.persistence.queue=job-persistence-notifications
# Database Connection
#spring.datasource.url=jdbc:postgresql://neondb_owner:npg_8yvHAKePxoJ4@ep-rapid-king-a4fc328z-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require
#spring.datasource.username=postgres
#spring.datasource.password=pavankalyan
#spring.jpa.hibernate.ddl-auto=validate
# 1. The URL (without username/password)
spring.datasource.url=jdbc:postgresql://ep-rapid-king-a4fc328z-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require

# 2. Username and Password as separate properties
spring.datasource.username=neondb_owner
spring.datasource.password=npg_8yvHAKePxoJ4

# 3. Explicitly set the PostgreSQL Dialect to fix the second error
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# 4. Keep the DDL-auto setting
spring.jpa.hibernate.ddl-auto=validate

# ===================================================================
# Endpoint for Service 1
service1.api.url=http://localhost:8080/api/jobs/process-final

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5673
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest